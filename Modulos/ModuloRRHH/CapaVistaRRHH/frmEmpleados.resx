<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbFoto.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAACFAAAA6AAAANwAAADeAAAA3gAAAN4AAADeAAAA3gAAAN4AAADeAAAA3gAAAN4AAADeAAAA3gAA
        AN4AAADeAAAA3QAAAOMAAAA6AAAAAAAAAJIAAADtAAAA2wAAAN4AAADeAAAA3gAAAN4AAADeAAAA3QAA
        AOQAAAA2AAAAAAAAAK8AAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD8AAAA/wAAAFIAAAAAAAAAtAAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD8AAAA/wAAAEsAAAAAAAAAiQAAAP8AAAD7AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD/AAAA/wAA
        AP4AAAD+AAAA/gAAAP4AAAD+AAAA/QAAAP0AAAD/AAAAMQAAAAAAAADLAAAA/wAAAPsAAAD+AAAA/gAA
        AP4AAAD+AAAA/QAAAP4AAAD5AAAAIwAAAAAAAABKAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD8AAAA/wAA
        AK8AAABFAAAA5gAAAP8AAAD+AAAA/wAAAP8AAAD9AAAA/wAAAN8AAAADAAAAEgAAAO8AAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAALgAAAAAAAAAAgAAAAYAAADRAAAA/wAAAP0AAAD/AAAA/wAA
        APwAAAD/AAAAWgAAAAAAAACvAAAA/wAAAPsAAAD/AAAA/wAAAPsAAAD/AAAAjwAAAAAAAABfAAAA/wAA
        APgAAAD+AAAA/wAAAP8AAAD+AAAA+gAAAP8AAAD3AAAAMwAAAAAAAAACAAAAAAAAAFwAAAD/AAAA+gAA
        AP8AAAD/AAAA/AAAAP8AAABZAAAAAAAAAKwAAAD/AAAA+wAAAP8AAAD9AAAA/wAAAOoAAAAeAAAAAAAA
        AEYAAAD2AAAA/wAAAP4AAAD/AAAA/wAAAP4AAAD/AAAA9gAAAE8AAAAAAAAAAwAAAAAAAAACAAAAAAAA
        AKEAAAD/AAAA+QAAAP0AAAD8AAAA/wAAAHQAAAAAAAAAxgAAAP8AAAD8AAAA/AAAAPwAAAD/AAAAVgAA
        AAAAAAAEAAAAAAAAACUAAACnAAAA5wAAAPIAAADyAAAA5wAAAKgAAAAmAAAAAAAAAAMAAAAAAAAAAAAA
        AAEAAAABAAAABAAAAKYAAAD/AAAA/QAAAPsAAAD+AAAA8gAAANcAAAD9AAAA+wAAAPwAAAD/AAAA/gAA
        AGQAAAAAAAAAAwAAAAAAAAACAAAAAgAAAAAAAAAjAAAAcAAAAHAAAAAjAAAAAAAAAAIAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAGkAAADrAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        AMsAAAA4AAAAAAAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAewAAAPAAAAD/AAAA/wAAAPAAAAB7AAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAABMAAABZAAAAkgAAALsAAADJAAAAtQAA
        AH8AAAA6AAAABAAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAH4AAAD/AAAA/AAAAP8AAAD/AAAA/AAA
        AP8AAAB+AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAAAAAA4AAABrAAAAtAAA
        AMkAAAC0AAAAdgAAABwAAAAAAAAABAAAAAAAAAAAAAAAAgAAAAAAAAAcAAAA8gAAAP8AAAD9AAAA/wAA
        AP8AAAD9AAAA/wAAAPEAAAAbAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABhAAAA9gAA
        AP8AAAD+AAAA/wAAAP8AAAD/AAAA/gAAAIAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAE8AAAD/AAAA/AAA
        AP8AAAD/AAAA/wAAAP8AAAD8AAAA/wAAAE8AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAZgAA
        AP8AAAD9AAAA/wAAAPMAAADcAAAA7gAAAP8AAAD8AAAA/wAAAIsAAAAAAAAAAgAAAAQAAAAAAAAAUwAA
        AP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAD/AAAAUwAAAAAAAAADAAAAAAAAAAAAAAACAAAAAAAA
        ACMAAADyAAAA/wAAAPoAAACCAAAAGAAAAAUAAAASAAAAaAAAAPAAAAD+AAAA/wAAAEQAAAAAAAAABQAA
        AAAAAAAjAAAA+AAAAP4AAAD+AAAA/wAAAP8AAAD+AAAA/gAAAPgAAAAjAAAAAAAAAAIAAAAAAAAAAAAA
        AAQAAAAAAAAAhgAAAP8AAAD/AAAAZAAAAAAAAAADAAAAAAAAAAIAAAAAAAAAQQAAAPkAAAD/AAAArgAA
        AAAAAAADAAAAAwAAAAAAAACTAAAA/wAAAPsAAAD7AAAA+wAAAPsAAAD/AAAAkwAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAADCAAAA/wAAAMMAAAAAAAAABgAAAAYAAAABAAAAAAAAAAMAAAAAAAAAnwAA
        AP8AAADiAAAADAAAAAAAAAABAAAAAAAAAAQAAACXAAAA/wAAAP4AAAD+AAAA/wAAAJcAAAAEAAAAAAAA
        AAMAAAACAAAAAgAAAAEAAAAAAAAAAwAAANYAAAD/AAAAhwAAAAAAAAAEAAAAAAAAAAMAAAAXAAAAIgAA
        AAIAAABfAAAA/wAAAPIAAAAcAAAAAAAAAAEAAAABAAAABAAAAAAAAAAuAAAAZwAAAGUAAAAqAAAAAAAA
        AAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAAP8AAACMAAAAAAAAADcAAACaAAAA2QAA
        APMAAAD5AAAA6wAAAOEAAAD/AAAA7QAAABQAAAAAAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAFAAAABAAAAAAAAAB9AAAAywAAADkAAAAAAAAAAwAAAAAAAACeAAAA/wAAAMoAAACVAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAADGAAAAAAAAAAQAAAAAAAAACQAAAEQAAAB1AAAAgAAA
        AGcAAAAoAAAAAAAAAAIAAAAAAAAAigAAAP8AAAD/AAAApgAAAAAAAAADAAAAAAAAAEMAAAD/AAAA/AAA
        AP8AAAD9AAAA+wAAAP0AAAD+AAAA/gAAAP4AAAD4AAAA/wAAAGoAAAAAAAAAAAAAAFcAAADfAAAA/wAA
        AP4AAAD/AAAA/wAAAPsAAACpAAAAEwAAAIcAAAD/AAAA/QAAAPIAAABBAAAAAAAAAAAAAAACAAAAAAAA
        AJ0AAAD/AAAA9gAAAPsAAAD+AAAA/wAAAP4AAAD9AAAA+QAAAP8AAADCAAAABQAAAAAAAACCAAAA/wAA
        AP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADvAAAA+QAAAP8AAAD4AAAARQAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAABgAAAKoAAAD/AAAA/QAAAP8AAAD/AAAA/wAAAP0AAAD/AAAAyAAAABkAAAAAAAAAWgAA
        AP8AAAD6AAAA/QAAAKEAAABCAAAAMAAAAFcAAADKAAAA/wAAAPsAAAD/AAAA9gAAAEcAAAAAAAAABAAA
        AAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAFsAAADKAAAA9gAAAP8AAAD5AAAA1gAAAHEAAAAIAAAAAAAA
        AAcAAADWAAAA/wAAAP8AAABmAAAAAAAAAAIAAAABAAAAAAAAAAEAAACuAAAA/wAAAP8AAACFAAAAAAAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAAEAAAAaAAAALQAAAB8AAAADAAAAAAAA
        AAUAAAAAAAAAQAAAAP8AAAD/AAAAswAAAAAAAAAFAAAABAAAAAIAAAAFAAAAAAAAAB0AAADuAAAA/wAA
        AL4AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
        AAEAAAAEAAAABQAAAAAAAABtAAAA/wAAAP8AAABnAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        ALcAAAD/AAAA4wAAAAsAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAIAAAACAAAAAAAAAAAAAAAEAAAAAAAAAHYAAAD/AAAA/wAAAFwAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAArgAAAP8AAADnAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAWgAAAP8AAAD/AAAAkwAAAAAAAAAHAAAAAQAA
        AAAAAAACAAAAAQAAAAgAAADbAAAA/wAAANMAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAhAAAA9AAAAP8AAADzAAAALAAA
        AAAAAAACAAAAAAAAAAMAAAAAAAAAcgAAAP8AAAD/AAAAmAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACdAAAA/wAA
        AP0AAADjAAAATAAAAAUAAAAAAAAAEAAAAIAAAAD8AAAA/QAAAPsAAAAwAAAAAAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        ABUAAADaAAAA/wAAAPwAAAD/AAAA4QAAAM8AAADuAAAA/wAAAPwAAAD/AAAAeAAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAAAAAB4AAADHAAAA/wAAAP4AAAD/AAAA/wAAAP4AAAD/AAAA+wAAAHMAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAYAAABnAAAAygAAAPEAAAD3AAAA5AAAAKMAAAAuAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAQAQAAEAEAABABAAAAAgBAIAKAQCAFQEBQCgAApCSQAUgRSAIQCaQE
        oAWoAiAFkAEgBSAAoAUhEJAJIihQAEKARCUiAEqIIACgUCAAwAAQAIABkAEAAqACCQXSChCE6KIVQvoK
        EEL/+hAC//oIhP/5AgT/+QAI//qAEf/9ACU=
</value>
  </data>
</root>